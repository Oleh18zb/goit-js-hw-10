{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst dateTime = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst daysSpan = document.querySelector('span[data-days]');\nconst hoursSpan = document.querySelector('span[data-hours]');\nconst minutesSpan = document.querySelector('span[data-minutes]');\nconst secondsSpan = document.querySelector('span[data-seconds]');\n\nlet userSelectDate = null;\nlet timerInterval = null;\n\n\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n            startBtn.disabled = true;\n        } else {\n            userSelectDate = selectedDate;\n            startBtn.disabled = false;\n        }\n    },\n  };\n\n  flatpickr(dateTime, options);\n\n  startBtn.addEventListener('click', () => {\n    if (userSelectDate) {\n        startBtn.disabled = true;\n        dateTime.disabled = true;\n        timerInterval = setInterval(updateTimer, 1000);\n    }\n  });\n\n  function updateTimer() {\n    const now = new Date();\n    const timeLeft = userSelectDate - now;\n\n    if (timeLeft <= 0) {\n        clearInterval(timerInterval);\n        dateTime.disabled = false;\n        startBtn.disabled = true;\n        // updateDisplay(0, 0, 0, 0);\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateDisplay(days, hours, minutes, seconds);\n  }\n\n  function updateDisplay(days, hours, minutes, seconds) {\n    daysSpan.textContent = addLeadingZero(days);\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n  }\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n  \n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n// Додай відображення дати і часу в реальному часі\n\nconst timeSpan = document.querySelector('.date span');\ntimeSpan.textContent = new Date().toLocaleString();\nsetInterval(() => timeSpan.textContent = new Date().toLocaleString(), 1000);\n\n// 1. Обчислення віку за датою народження\n// Задача: Напишіть функцію calculateAge(birthDate), яка приймає дату народження у форматі YYYY-MM-DD і повертає поточний вік.\n// Підказка: Використайте об'єкт Date для обчислення різниці між сьогоднішньою датою і датою народження.\n\nfunction calculateAge(birthDate) {\n  const now = new Date();\n  const birth = new Date(birthDate);\n  let age = now.getFullYear() - birth.getFullYear();\n  const month = now.getMonth() - birth.getMonth();\n  const day = now.getDate() - birth.getDate();\n  if (month < 0 || (month === 0 && day < 0)) {\n    age -= 1;\n  }\nreturn age;\n\n}\nconsole.log(calculateAge('1995-11-18'));\n\n"],"names":["dateTime","startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectDate","timerInterval","options","selectedDates","selectedDate","iziToast","flatpickr","updateTimer","timeLeft","days","hours","minutes","seconds","convertMs","updateDisplay","addLeadingZero","value","ms","timeSpan","calculateAge","birthDate","now","birth","age","month","day"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,eAAe,iBAAiB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/D,IAAIC,EAAiB,KACjBC,EAAgB,KAKpB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACDV,EAAS,SAAW,KAEpBK,EAAiBI,EACjBT,EAAS,SAAW,GAE3B,CACL,EAEEW,EAAUZ,EAAUQ,CAAO,EAE3BP,EAAS,iBAAiB,QAAS,IAAM,CACnCK,IACAL,EAAS,SAAW,GACpBD,EAAS,SAAW,GACpBO,EAAgB,YAAYM,EAAa,GAAI,EAErD,CAAG,EAED,SAASA,GAAc,CAErB,MAAMC,EAAWR,EADL,IAAI,KAGhB,GAAIQ,GAAY,EAAG,CACf,cAAcP,CAAa,EAC3BP,EAAS,SAAW,GACpBC,EAAS,SAAW,GAEpB,MACH,CAED,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5DM,EAAcL,EAAMC,EAAOC,EAASC,CAAO,CAC5C,CAED,SAASE,EAAcL,EAAMC,EAAOC,EAASC,EAAS,CACpDhB,EAAS,YAAcmB,EAAeN,CAAI,EAC1CZ,EAAU,YAAckB,EAAeL,CAAK,EAC5CZ,EAAY,YAAciB,EAAeJ,CAAO,EAChDZ,EAAY,YAAcgB,EAAeH,CAAO,CACjD,CAED,SAASG,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAED,SAASH,EAAUI,EAAI,CAQrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAE1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EAEpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EAEjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAIH,MAAMM,EAAW,SAAS,cAAc,YAAY,EACpDA,EAAS,YAAc,IAAI,KAAM,EAAC,eAAc,EAChD,YAAY,IAAMA,EAAS,YAAc,IAAI,KAAI,EAAG,eAAc,EAAI,GAAI,EAM1E,SAASC,EAAaC,EAAW,CAC/B,MAAMC,EAAM,IAAI,KACVC,EAAQ,IAAI,KAAKF,CAAS,EAChC,IAAIG,EAAMF,EAAI,YAAa,EAAGC,EAAM,YAAW,EAC/C,MAAME,EAAQH,EAAI,SAAU,EAAGC,EAAM,SAAQ,EACvCG,EAAMJ,EAAI,QAAS,EAAGC,EAAM,QAAO,EACzC,OAAIE,EAAQ,GAAMA,IAAU,GAAKC,EAAM,KACrCF,GAAO,GAEJA,CAEP,CACA,QAAQ,IAAIJ,EAAa,YAAY,CAAC"}